import { Injectable } from '@angular/core';
import { NgxDhis2HttpClientService } from '@iapps/ngx-dhis2-http-client';
import * as _ from 'lodash';
import { of, zip } from 'rxjs';
import { catchError, map, switchMap } from 'rxjs/operators';

import { generateDeterminants } from '../helpers/generate-determinants.helper';
import { Determinant } from '../models/determinant.model';
import { correctDeterminants } from '../helpers/correct-determinants.helper';

@Injectable({
  providedIn: 'root',
})
export class DeterminantService {
  dataStoreUrl: string;
  constructor(private http: NgxDhis2HttpClientService) {
    this.dataStoreUrl = 'dataStore/data-filter-groups';
  }

  getDeterminants(
    determinantPreferences: any = { autoGenerateDeterminants: true }
  ) {
    return this.http.get(this.dataStoreUrl).pipe(
      switchMap((determinantIds: string[]) =>
        zip(
          ..._.map(determinantIds, (determinantId: string) =>
            this.http.get(`${this.dataStoreUrl}/${determinantId}`)
          )
        )
      ),
      catchError((error: any) => {
        if (
          error.status !== 404 ||
          !determinantPreferences.autoGenerateDeterminants
        ) {
          return of([]);
        }

        return zip(
          ..._.map(generateDeterminants(), (determinant: Determinant) =>
            this.createDeterminant(determinant)
          )
        ).pipe(
          map((determinants: Determinant[]) => determinants),
          catchError(() => of([]))
        );
      }),
      map((determinants: Determinant[]) => correctDeterminants(determinants))
    );
  }

  createDeterminant(determinant: Determinant) {
    return this.http
      .post(`${this.dataStoreUrl}/${determinant.id}`, determinant)
      .pipe(map(() => determinant));
  }

  updateDeterminant(determinant: Determinant) {
    return this.http.put(
      `${this.dataStoreUrl}/${determinant.id}`,
      _.omit(determinant, ['showEditForm', 'showDeleteDialog', 'deleting'])
    );
  }

  deleteDeterminant(id: string) {
    return this.http.delete(`${this.dataStoreUrl}/${id}`);
  }
}
